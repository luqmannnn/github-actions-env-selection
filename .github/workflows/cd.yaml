name: Deploy

on:
  workflow_dispatch:
    inputs:
      target_env:
          type: environment
          description: Select the environment
      version:
          type: string
          description: Select version
  workflow_call:
    inputs:
      target_env:
          type: string
          required: true
      version:
          type: string
          required: true

jobs:
  pre-deploy-step:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: print environment
        run: | 
          echo "env selected is ${{ inputs.target_env }}"

      - name: print version
        run: |
          echo "version selected is ${{ inputs.version }}"
  
  deploy-step:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      - name: Login to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ vars.ECR_URL }}

      - name: Docker build and tag
        run: |
          docker build -t ${{ vars.IMAGE }}:${{ inputs.version }} .
          docker tag ${{ vars.IMAGE }}:${{ inputs.version }} ${{ vars.ECR_URL }}/${{ vars.IMAGE }}:${{ inputs.version }}

      - name: Run image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ vars.IMAGE }}:${{ inputs.version }}'
          format: 'table'
          # exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'MEDIUM,HIGH,CRITICAL'

      - name: Docker publish to ECR
        run: docker push ${{ vars.ECR_URL }}/${{ vars.IMAGE }}:${{ inputs.version }}

      - name: Run docker image on EC2
        run: |
          echo "Deploying image to EC2 or ECS..."
          echo "Deploying image to EC2 or ECS..."
          echo "Deploying image to EC2 or ECS..."
          echo "Deployment done!"